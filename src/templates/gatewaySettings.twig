{% from "_includes/forms" import textField, lightswitchField, selectField, autoSuggestField, selectizeField, booleanMenuField %}

{{ autoSuggestField({
    label: "Client Id"|t('vipps'),
    instructions: "Your Vipps Client Id."|t('vipps'),
    id: 'clientId',
    class: 'ltr',
    name: 'clientId',
    value: gateway.clientId,
    required: true,
    errors: gateway.getErrors('clientId'),
    suggestEnvVars: true,
}) }}

{{ autoSuggestField({
    label: "Client Secret"|t('vipps'),
    instructions: "Your Vipps Client Secret."|t('vipps'),
    id: 'clientSecret',
    class: 'ltr',
    name: 'clientSecret',
    value: gateway.clientSecret,
    required: true,
    errors: gateway.getErrors('clientSecret'),
    suggestEnvVars: true,
}) }}

{{ autoSuggestField({
    label: "Subscription key"|t('vipps'),
    instructions: "Your Vipps Subscription Key (primary or secondary)."|t('vipps'),
    id: 'subscriptionKeyAccessToken',
    class: 'ltr',
    name: 'subscriptionKeyAccessToken',
    value: gateway.subscriptionKeyAccessToken,
    required: true,
    errors: gateway.getErrors('subscriptionKeyAccessToken'),
    suggestEnvVars: true,
}) }}

{{ autoSuggestField({
    label: "Merchant Serial Number"|t('vipps'),
    instructions: "Your publishable Stripe API key."|t('vipps'),
    id: 'merchantSerialNumber',
    class: 'ltr',
    name: 'merchantSerialNumber',
    value: gateway.merchantSerialNumber,
    required: true,
    errors: gateway.getErrors('merchantSerialNumber'),
    suggestEnvVars: true,
}) }}

{{ autoSuggestField({
    label: "Transaction text"|t("vipps"),
    instructions: "This will be listed in the Vipps app when a user authorizes a payment."|t("vipps"),
    id: 'transactionText',
    name: 'transactionText',
    class: 'ltr',
    value: gateway.transactionText,
    errors: gateway.getErrors('transactionText'),
    suggestEnvVars: true,
}) }}

{{ autoSuggestField({
    label: "Fallback URL"|t("vipps"),
    instructions: "The user will be redirected here when finishing or cancelling the payment."|t("vipps"),
    id: 'fallbackUrl',
    name: 'fallbackUrl',
    class: 'ltr',
    value: gateway.fallbackUrl,
    errors: gateway.getErrors('fallbackUrl'),
    suggestEnvVars: true,
}) }}

{{ autoSuggestField({
    label: "Error Fallback URL"|t("vipps"),
    instructions: "The user will be redirected here when a payment is cancelled, or some other error happens. If left empty, users will be redirect to the Fallback URL."|t("vipps"),
    id: 'errorFallbackUrl',
    name: 'errorFallbackUrl',
    class: 'ltr',
    value: gateway.errorFallbackUrl,
    errors: gateway.getErrors('errorFallbackUrl'),
    suggestEnvVars: true,
}) }}

{{ textField({
    label: "Auth token"|t("vipps"),
    instructions: "Token is used to verify callbacks from Vipps."|t("vipps"),
    id: 'authToken',
    name: 'authToken',
    class: 'ltr',
    readonly: true,
    value: authToken,
    required: true,
    errors: gateway.getErrors('authToken')
}) }}


{{ booleanMenuField({
    label: "Test mode"|t('vipps'),
    name: 'testMode',
    value: gateway.testMode,
    yesLabel: 'On'|t('app'),
    noLabel: 'Off'|t('app'),
    errors: gateway.getErrors('testMode'),
    includeEnvVars: true,
}) }}

{{ booleanMenuField({
    label: "Use billing phone number as Vipps phone number"|t('vipps'),
    description: "This will set the Vipps phone number to be the same as the billing address phone number, if any."|t('vipps'),
    name: 'useBillingPhoneAsVippsPhoneNumber',
    yesLabel: 'Yes'|t('app'),
    noLabel: 'No'|t('app'),
    value: gateway.useBillingPhoneAsVippsPhoneNumber,
    errors: gateway.getErrors('useBillingPhoneAsVippsPhoneNumber'),
    includeEnvVars: true,
}) }}

{{ booleanMenuField({
    label: "Capture on status change"|t('vipps'),
    description: "This will enable the gateway to automatically capture on a status change - say when you change from _New_ to _Shipped_"|t('vipps'),
    name: 'captureOnStatusChange',
    yesLabel: 'Yes'|t('app'),
    noLabel: 'No'|t('app'),
    value: gateway.captureOnStatusChange,
    errors: gateway.getErrors('captureOnStatusChange'),
    includeEnvVars: true,
}) }}


{{ selectizeField({
    label: "Capture status"|t("vipps"),
    instructions: "Status for automatic capture."|t("vipps"),
    id: 'captureStatusUid',
    name: 'captureStatusUid',
    value: gateway.captureStatusUid,
    options: statuses,
    errors: gateway.getErrors('captureStatusUid'),
    includeEnvVars: true,
}) }}

{#
{{ lightswitchField({
    label: "Create user on express checkout"|t('vipps'),
    instructions: "This will create a user when someone performs a Express Checkout and they don't already have a user matching their email",
    name: 'createUserOnExpressCheckout',
    on: gateway.createUserOnExpressCheckout,
    errors: gateway.getErrors('createUserOnExpressCheckout'),
}) }}
#}


{{ booleanMenuField({
    label: "Create new cart on Express Checkout"|t('vipps'),
    instructions: "This will clear the cart if there is already any items in it when a user performs a Express Checkout",
    name: 'newCartOnExpressCheckout',
    value: gateway.newCartOnExpressCheckout,
    errors: gateway.getErrors('newCartOnExpressCheckout'),
    yesLabel: 'Yes'|t('app'),
    noLabel: 'No'|t('app'),
}) }}
